<?php
namespace CAT\Custom\Setup\Patch\Data;

use Magento\Framework\Setup\Patch\DataPatchInterface;
use Magento\Framework\Setup\Patch\PatchRevertableInterface;
use Magento\Framework\App\ResourceConnection;

/**
 * UpdateUrlsForMissingProducts class
 */
class UpdateUrlsForMissingProducts implements DataPatchInterface
{

    /**
     * @var ResourceConnection
     */
    private $resourceConnection;

    /**
     * __construct function
     *
     * @param ResourceConnection $resourceConnection
     */
    public function __construct(
        ResourceConnection $resourceConnection
    ) {
        $this->resourceConnection = $resourceConnection;
    }

    public function apply()
    {
        $logger = $this->getLogger();
        try {
            $connection = $this->resourceConnection->getConnection();
            $insertSql = "INSERT IGNORE INTO url_rewrite (entity_type, entity_id, request_path, target_path, redirect_type, store_id, description, is_autogenerated, metadata)
            SELECT entity_type, entity_id, request_path, target_path, redirect_type, case when store_id=2 then 1 else 2 end as store_id , description, is_autogenerated, metadata 
            FROM url_rewrite
            WHERE entity_type = 'product' and target_path = CONCAT('catalog/product/view/id/',entity_id)
            Group By entity_id Having count(entity_id) < 2";
            $connection->query($insertSql);
        } catch (\Exception $e) {
            $logger->info($e->getMessage());
        }
    }

    public static function getDependencies()
    {
        return [];
    }

    public function getAliases()
    {
        return [];
    }

    public function getLogger() {
        $writer = new \Zend\Log\Writer\Stream(BP . '/var/log/url_patch.log');
        $logger = new \Zend\Log\Logger();
        $logger->addWriter($writer);
        return $logger;
    }
}